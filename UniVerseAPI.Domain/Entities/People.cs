// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
using IndexAttribute = Microsoft.EntityFrameworkCore.IndexAttribute;

namespace UniVerseAPI.Infra.Data.Context
{
    [Index("Cpf", Name = "UQ__People__C1FF9309991D9366", IsUnique = true)]
    public partial class People : BaseEntity
    {
        public People()
        {
            Student = new HashSet<Student>();
            Teacher = new HashSet<Teacher>();
        }

        [Key]
        public Guid Id { get; private set; }
        public Guid AddressId { get; private set; }
        [Required]
        [StringLength(255)]
        public string FullName { get; private set; }
        [Column(TypeName = "date")]
        public DateTime BirthDate { get; private set; }
        [Required]
        [StringLength(11)]
        [Unicode(false)]
        public string Cpf { get; private set; }
        [Required]
        [StringLength(255)]
        public string Gender { get; private set; }
        [Required]
        [StringLength(255)]
        public string Phone { get; private set; }
        [Required]
        [StringLength(255)]
        public string Email { get; private set; }
        [Required]
        [StringLength(500, MinimumLength = 8)]
        public string Password { get; set; }

        [ForeignKey("AddressId")]
        [InverseProperty("People")]
        public virtual Address Address { get; private set; }
        [InverseProperty("People")]
        public virtual ICollection<Student> Student { get; private set; }
        [InverseProperty("People")]
        public virtual ICollection<Teacher> Teacher { get; private set; }

        public People(Guid addressId, string fullName, DateTime birthDate, string cpf, string gender, string phone, string email)
        {
            Id = Guid.NewGuid();
            AddressId = addressId;
            FullName = fullName;
            BirthDate = birthDate;
            Cpf = cpf;
            Gender = gender;
            Phone = phone;
            Email = email;
            CreationDate = DateTime.Now;
            LastUpdateAsync = DateTime.Now;
        }

        public void UpdateAsync(Guid id, Guid addressId, string fullName, DateTime birthDate, string cpf, string gender, string phone, string email, Address address)
        {
            AddressId = addressId;
            FullName = fullName;
            BirthDate = birthDate;
            Cpf = cpf;
            Gender = gender;
            Phone = phone;
            Email = email;
            Address = address;
            LastUpdateAsync = DateTime.Now;
        }
    }


}